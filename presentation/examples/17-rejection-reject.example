function Promise(fn) {

  // ...

  function reject(reason) {
    state = 'rejected'
    value = reason

    if (deferred) {
      handle(deferred)
    }
  }

  // ...

  this.then = function (onResolved, onRejected) {
    return new Promise((resolve, reject) => {
      handle({ onResolved, onRejected, resolve, reject })
    })
  }

  this.catch = function (onRejected) {
    this.then(null, onRejected)
  }

  fn(resolve, reject)
}
